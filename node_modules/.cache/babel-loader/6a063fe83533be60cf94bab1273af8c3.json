{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/banjo/OneDrive/Documents/SIDE_PROJECTS/hactually-chat/src/Chat.js\",\n    _s = $RefreshSig$();\n\nimport { IconButton } from '@material-ui/core';\nimport MicNoneIcon from '@material-ui/icons/MicNone';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport \"./Chat.css\";\nimport { selectChatId, selectChatName } from './features/chatSlice';\nimport db from \"./features/firebase\";\nimport Message from \"./Message\";\nimport firebase from 'firebase';\nimport { selectUser } from './features/userSlice';\nimport { useRef } from 'react';\n\nfunction Chat() {\n  _s();\n\n  const myRef = useRef(null);\n  const user = useSelector(selectUser);\n  const [input, setInput] = useState(\"\");\n  const chatName = useSelector(selectChatName);\n  const [messages, setMessages] = useState([]);\n  const chatId = useSelector(selectChatId);\n\n  const executeScroll = () => {\n    myRef.current.scrollIntoView();\n  };\n\n  useEffect(() => {\n    if (chatId) {\n      db.collection(\"chats\").doc(chatId).collection(\"messages\").orderBy(\"timestamp\", \"asc\").onSnapshot(snapshot => setMessages(snapshot.docs.map(doc => ({\n        id: doc.id,\n        data: doc.data()\n      }))));\n      executeScroll();\n    }\n  }, [chatId]);\n\n  const sendMessage = e => {\n    e.preventDefault();\n\n    if (input) {\n      db.collection(\"chats\").doc(chatId).collection(\"messages\").add({\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        message: input,\n        uid: user.uid,\n        photo: user.photo,\n        email: user.email,\n        displayName: user.displayName\n      });\n    }\n\n    setInput(\"\");\n    executeScroll();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"To: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chat__name\",\n          children: chatName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: executeScroll,\n      className: \"chat__messages\",\n      children: [messages.map(({\n        id,\n        data\n      }) => /*#__PURE__*/_jsxDEV(Message, {\n        contents: data\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__dummy\",\n        id: \"chat__dummy\",\n        ref: myRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: executeScroll,\n      className: \"chat__input\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"HactualMessage\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(MicNoneIcon, {\n          className: \"chat__mic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"NYu9RGhaKxd+Wg6vsFbq/LTCY6A=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/banjo/OneDrive/Documents/SIDE_PROJECTS/hactually-chat/src/Chat.js"],"names":["IconButton","MicNoneIcon","React","useEffect","useState","useSelector","selectChatId","selectChatName","db","Message","firebase","selectUser","useRef","Chat","myRef","user","input","setInput","chatName","messages","setMessages","chatId","executeScroll","current","scrollIntoView","collection","doc","orderBy","onSnapshot","snapshot","docs","map","id","data","sendMessage","e","preventDefault","add","timestamp","firestore","FieldValue","serverTimestamp","message","uid","photo","email","displayName","target","value"],"mappings":"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","sourcesContent":["import { IconButton } from '@material-ui/core';\nimport MicNoneIcon from '@material-ui/icons/MicNone';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport \"./Chat.css\";\nimport { selectChatId, selectChatName } from './features/chatSlice';\nimport db from \"./features/firebase\";\nimport Message from \"./Message\";\nimport firebase from 'firebase';\nimport { selectUser } from './features/userSlice';\nimport { useRef } from 'react';\n\nfunction Chat() {\n\n    const myRef = useRef(null);\n    const user = useSelector(selectUser);\n    const [input, setInput] = useState(\"\");\n    const chatName = useSelector(selectChatName);\n    const [messages, setMessages] = useState([]);\n    const chatId = useSelector(selectChatId);\n\n    const executeScroll = () => {\n        \n        myRef.current.scrollIntoView();\n    }\n    \n    useEffect(() => {\n        if(chatId) {\n            db.collection(\"chats\")\n            .doc(chatId)\n            .collection(\"messages\")\n            .orderBy(\"timestamp\", \"asc\")\n            .onSnapshot((snapshot) => \n                setMessages(\n                    snapshot.docs.map((doc) => ({\n                        id: doc.id,\n                        data: doc.data(),\n                    }))                \n                )\n            );\n            executeScroll();\n        }\n\n    }, [chatId]);\n\n    \n\n    const sendMessage = (e) => {\n        e.preventDefault();\n\n        if (input) {\n            db.collection(\"chats\").doc(chatId).collection(\"messages\")\n            .add({\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                message: input,\n                uid: user.uid,\n                photo: user.photo,\n                email: user.email,\n                displayName: user.displayName,\n            });\n        }   \n        setInput(\"\");\n        executeScroll();\n    };\n\n    \n\n    return (\n        <div className=\"chat\">\n            \n            <div className=\"chat__header\">\n                <h4>To: <span className=\"chat__name\">{chatName}</span></h4>\n                <strong>Details</strong>\n            </div>\n\n            <div onClick={executeScroll} className=\"chat__messages\">\n                {messages.map(({id, data}) => (\n                    <Message key={id} contents={data} />\n                ))}\n                <div className=\"chat__dummy\" id=\"chat__dummy\" ref={myRef}></div>\n            </div>\n\n            \n\n            <div onClick={executeScroll} className=\"chat__input\">\n                <form>\n                    <input value={input} onChange={e => setInput(e.target.value)} \n                    placeholder=\"HactualMessage\" type=\"text\" />\n                    <button onClick={sendMessage}>Send Message</button>\n                </form>\n\n                <IconButton>\n                    <MicNoneIcon className=\"chat__mic\"/>\n                </IconButton>\n                \n\n            </div>\n\n\n        </div>\n    )\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}